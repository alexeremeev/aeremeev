# PSQL connection settings
DB_driver = org.postgresql.Driver
DB_url = jdbc:postgresql://localhost:5432/users
DB_username = postgres
DB_password = root

# SQL queries
SQL_CREATE_TABLE = CREATE TABLE IF NOT EXISTS USERS (ID SERIAL PRIMARY KEY, \
  NAME VARCHAR(100) NOT NULL, LOGIN VARCHAR(100) NOT NULL, \
  EMAIL VARCHAR(100) NOT NULL, \
  CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW(), PASSWORD VARCHAR(100) NOT NULL, \
  ROLE_ID INTEGER REFERENCES ROLES(ID), ADDRESS_ID INTEGER REFERENCES ADDRESS(ID), UNIQUE(LOGIN))
SQL_CREATE_ROLES = CREATE TABLE IF NOT EXISTS ROLES (ID SERIAL PRIMARY KEY, \
  NAME VARCHAR(100) NOT NULL, ADMIN BOOLEAN, UNIQUE(NAME))
SQL_CREATE_COUNTRIES = CREATE TABLE IF NOT EXISTS COUNTRIES (ID SERIAL PRIMARY KEY, NAME VARCHAR(100) NOT NULL)
SQL_CREATE_CITIES = CREATE TABLE IF NOT EXISTS CITIES (ID SERIAL PRIMARY KEY, NAME VARCHAR(100), COUNTRY_ID INTEGER REFERENCES COUNTRIES(ID))
SQL_CREATE_ADDRESS = CREATE TABLE IF NOT EXISTS  ADDRESS (ID SERIAL PRIMARY KEY, COUNTRY_ID INTEGER REFERENCES COUNTRIES(ID), CITY_ID INTEGER REFERENCES CITIES(ID))
SQL_CLEAR_TABLE = TRUNCATE TABLE USERS RESTART IDENTITY CASCADE;
SQL_CLEAR_ROLES = TRUNCATE TABLE ROLES RESTART IDENTITY CASCADE;
SQL_ADD_USER = INSERT INTO USERS (NAME, LOGIN, EMAIL, CREATE_DATE, PASSWORD, ROLE_ID, ADDRESS_ID) VALUES (?, ?, ?, ?, ?, ?, ?)
SQL_ADD_ROLE = INSERT INTO ROLES (NAME, ADMIN) VALUES (?, ?)
SQL_FIND_ALL = SELECT U.NAME, U.LOGIN, U.EMAIL, U.CREATE_DATE, U.PASSWORD, R.NAME, R.ID, R.ADMIN, \
  CNTRY.ID, CNTRY.NAME, C.ID, C.NAME FROM USERS AS U INNER JOIN ROLES AS R ON U.ROLE_ID = R.ID INNER JOIN \
  CITIES AS C ON U.ADDRESS_ID = C.ID INNER JOIN COUNTRIES AS CNTRY ON C.COUNTRY_ID = CNTRY.ID WHERE U.ID <> ? ORDER BY 1;
SQL_FIND_ALL_ROLES = SELECT * FROM ROLES WHERE ID <> ? ORDER BY ID
SQL_UPDATE_USER = UPDATE USERS SET name = ?, email = ?, password = ?, role_id = ?, address_id = ? where login = ?
SQL_UPDATE_ROLE = UPDATE ROLES SET name = ?, admin = ? WHERE id = ?
SQL_DELETE_USER = DELETE FROM USERS WHERE LOGIN = ?
SQL_DELETE_ROLE = DELETE FROM ROLES WHERE NAME = ?
SQL_FIND_BY_LOGIN = SELECT U.NAME, U.LOGIN, U.EMAIL, U.CREATE_DATE, U.PASSWORD, R.NAME, R.ID, R.ADMIN, \
  CNTRY.ID, CNTRY.NAME, C.ID, C.NAME FROM USERS AS U INNER JOIN ROLES AS R ON U.ROLE_ID = R.ID INNER JOIN \
  CITIES AS C ON U.ADDRESS_ID = C.ID INNER JOIN COUNTRIES AS CNTRY ON C.COUNTRY_ID = CNTRY.ID WHERE U.LOGIN = ?
SQL_FIND_ROLE = SELECT * FROM ROLES WHERE ID = ?

SQL_CHECK_CITIES = SELECT COUNT(*) FROM CITIES;
SQL_CHECK_COUNTRIES = SELECT COUNT(*) FROM COUNTRIES;
SQL_CHECK_ADDRESS = SELECT COUNT(*) FROM ADDRESS;
SQL_CHECK_USERS = SELECT COUNT(*) FROM USERS;
SQL_CHECK_ROLES = SELECT COUNT(*) FROM ROLES;

# SQL DB initial roles and admin
SQL_ADD_ADMIN_ROLE = INSERT INTO ROLES (NAME, ADMIN) SELECT 'admin', true \
  WHERE NOT EXISTS (SELECT NAME FROM ROLES WHERE NAME = 'admin')
SQL_ADD_USER_ROLE = INSERT INTO ROLES (NAME, ADMIN) SELECT 'user', false \
  WHERE NOT EXISTS (SELECT NAME FROM ROLES WHERE NAME = 'user')
SQL_ADD_ADMIN = INSERT INTO USERS (NAME, LOGIN, EMAIL, PASSWORD, ROLE_ID, ADDRESS_ID) \
  SELECT 'admin', 'admin', 'admin@admin', 'admin', 1, 1 WHERE NOT EXISTS (SELECT NAME FROM USERS WHERE NAME = 'admin')